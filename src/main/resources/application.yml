server:
  port: 8091
  servlet:
    context-path: /omega-buy
  compression:
    enabled: true
    mime-types: text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json
    min-response-size: 1024
  http2:
    enabled: true
  ssl:
    enabled: true
    enabled-protocols: TLSv1.2
    key-alias: ${SSL_KEY_ALIAS:}
    key-password: ${SSL_KEY_PASSWORD:}
    key-store: classpath:vengeance.jks
    key-store-password: ${SSL_KEYSTORE_PASSWORD:}
    key-store-type: JKS
    protocol: TLS
#    trust-store: vengeance.jks
#    trust-store-type: JKS
#    trust-store-password: ${SSL_KEYSTORE_PASSWORD:}
logging:
  level:
    root: info
  config: classpath:log4j-spring.xml
#  org.springframework.data: debug
spring:
  application:
    name: omega-buy-service
  datasource:
    driver-class-name: ${SPRING_DATASOURCE_DRIVER-CLASS-NAME:}
    password: ${SPRING_DATASOURCE_PASSWORD:}
    username: ${SPRING_DATASOURCE_USERNAME:}
    url: ${SPRING_DATASOURCE_URL:}
    hikari:
      connectionTimeout: 30000
      idleTimeout: 100000
      maxLifetime: 900000
      maximum-pool-size: 20
      minimum-idle: 10
    initialization-mode: never
  messages:
    basename: static/i18n/message
    encoding: UTF-8
  jpa:
    hibernate:
      ddl-auto: none
      use-new-id-generator-mappings: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQL10Dialect
        format_sql: true
        default_schema: omega_buy
    show-sql: true
    open-in-view: false
  web:
    locale-resolver: accept_header
  banner:
    location: classpath:banner.txt
  main:
    banner-mode: log
  security:
    oauth2:
      resourceserver:
        opaquetoken:
          introspection-uri: ${AUTH_SERVICE:}
          client-id: ${CLIENT_ID:}
          client-secret: ${CLIENT_SECRET:}
        jwt:
          jwk-set-uri: ${JWKS_ENDPOINT:}
custom:
  http-port: 8090
  https-port: 8091
  security-policy: CONFIDENTIAL
  connector-scheme: http
  trust-store-password: ${SSL_TRUSTSTORE_PASSWORD:}
  trust-store-type: JKS
eureka:
  instance:
    hostname: localhost
    secure-port-enabled: true
    non-secure-port-enabled: false
  #    prefer-ip-address: true
  client:
    serviceUrl:
      defaultZone: ${EUREKA_SERVICE_URL:}
